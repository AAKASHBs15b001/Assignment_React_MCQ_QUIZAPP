{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './Components/Header';\nimport { useState } from \"react\";\nimport questions from './Questions';\nimport { Container } from 'react-bootstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd'; // import { Row, Col } from 'antd';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-count\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Question \", currentQuestion + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 8\n              }, this), \"/\", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: questions[currentQuestion].questionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(Col, {\n              span: 2,\n              children: [\"option:\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n                children: answerOption.answerText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js"],"names":["Header","useState","questions","Container","Row","Col","Divider","App","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","map","answerOption"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header'\nimport { useState } from \"react\";\nimport questions from './Questions'\nimport { Container } from 'react-bootstrap';\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\n// import { Row, Col } from 'antd';\n\nfunction App() {\n\n\n\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [\n        { answerText: 'New York', isCorrect: false },\n        { answerText: 'London', isCorrect: false },\n        { answerText: 'Paris', isCorrect: true },\n        { answerText: 'Dublin', isCorrect: false },\n    ],\n},\n{\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [\n        { answerText: 'Jeff Bezos', isCorrect: false },\n        { answerText: 'Elon Musk', isCorrect: true },\n        { answerText: 'Bill Gates', isCorrect: false },\n        { answerText: 'Tony Stark', isCorrect: false },\n    ],\n},\n{\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [\n        { answerText: 'Apple', isCorrect: true },\n        { answerText: 'Intel', isCorrect: false },\n        { answerText: 'Amazon', isCorrect: false },\n        { answerText: 'Microsoft', isCorrect: false },\n    ],\n},\n{\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [\n        { answerText: '1', isCorrect: false },\n        { answerText: '4', isCorrect: false },\n        { answerText: '6', isCorrect: false },\n        { answerText: '7', isCorrect: true },\n    ],\n},\n];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\n\n\n  const handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n\n\n\n\n\n\n\n\n\n  return (\n\t\t<div className='app'>\n      <Header></Header>\n      <Container>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n        <Divider>\n\t\t\t\t\t<div className='question-section'>\n          \n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n         </Divider>\n\t\t\t\t\t<div className='answer-section'>\n          <Row >\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n              \n                <Col span={2}>\n                  option:\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n              </Col>\n             \n\t\t\t\t\t\t))}\n             </Row>\n             \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n      </Container>\n\t\t</div>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}