{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/screen.js\",\n    _s = $RefreshSig$();\n\n// import Header from './Components/Header'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './stopwatch';\nimport AnswersAction from '../redux/Answers/actions';\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nimport switcher from '../redux/Timer/actions';\nimport Table from './ResultTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  swtichtheTimerON,\n  swtichtheTimerFF,\n  ResetTimer\n} = switcher;\n\nfunction Screen() {\n  _s();\n\n  const ansARR = useSelector(state => state.Submithandler.Answers);\n  const [Answrshow, setAnswrshow] = useState(false);\n  const {\n    submittheAnswer,\n    skiptheAnswer\n  } = AnswersAction;\n  const [timerswitcher, settimerswitcher] = useState(false);\n  const [selected_option, set_selected_option] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [attempts, setattempts] = useState([0, 0, 0, 0]);\n  const dispatch = useDispatch();\n  const switcherstatus = useSelector(state => state.Timerreducer.switch);\n  const [isActive, setIsActive] = useState(true);\n  const [isPaused, setIsPaused] = useState(false);\n  const [time, setTime] = useState(0); // var i = setInterval(function() {\n  //  console.log('hskskhksh')\n  // }, 500);\n  // if(showScore)(function(){\n  //   clearInterval(i);\n  // });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  const handleclickoption = option => {\n    set_selected_option(option);\n  }; // var Countdown=(<h1>loding</h1>)\n  //   useEffect(()=>{\n  //   },[currentQuestion])\n\n\n  const handleAnswerOptionClick = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handlesubmit = () => {\n    const arr = attempts;\n    arr[currentQuestion] = selected_option;\n    setattempts(arr);\n    set_selected_option('');\n    setCurrentQuestion(currentQuestion + 1);\n    dispatch(submittheAnswer(currentQuestion, selected_option));\n    dispatch(ResetTimer()); // dispatch(swtichtheTimerON())\n  };\n\n  const handleskip = () => {\n    const arr = attempts;\n    arr[currentQuestion] = 'NA';\n    setattempts(arr);\n    set_selected_option('');\n    setCurrentQuestion(currentQuestion + 1);\n    dispatch(skiptheAnswer(currentQuestion));\n    dispatch(ResetTimer());\n  };\n\n  useEffect(() => {\n    console.log('switchit');\n\n    if (switcherstatus == 'yes') {\n      handleskip();\n    }\n  }, [switcherstatus]);\n  let TableRes;\n  useEffect(() => {\n    console.log('switchit');\n    TableRes = /*#__PURE__*/_jsxDEV(Table, {\n      Answers: ansARR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this);\n  }, [ansARR]);\n  console.log(attempts, 'attemptsksjksks');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion < 8 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-count\",\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '2vh',\n                        borderRadius: '25px',\n                        textAlign: 'center',\n                        marginTop: '3vh',\n                        marginLeft: '3vh',\n                        color: 'white',\n                        backgroundColor: '#660066',\n                        width: '10vw'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Question \", currentQuestion + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 8\n                      }, this), \"/\", questions.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      width: '60vw',\n                      marginBottom: '2vh',\n                      borderRadius: '25px',\n                      textAlign: 'left',\n                      marginLeft: '3vh',\n                      color: 'white',\n                      backgroundColor: '#8600b3'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-text\",\n                      children: !showScore ? questions[currentQuestion].questionText : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-section\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '3vh',\n                        marginLeft: '3vh'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          marginBottom: '3vh',\n                          marginRight: '1vh',\n                          backgroundColor: '#6600cc'\n                        },\n                        onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n                        children: answerOption.option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 21\n                      }, this), answerOption.option === selected_option ? /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: 'green'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 60\n                      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: '#1a8cff'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 260\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            style: {\n              marginLeft: '2vw'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '10vw',\n                marginLeft: '16vw',\n                borderRadius: '22px'\n              },\n              onClick: handlesubmit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '10vw',\n                marginLeft: '2vw',\n                borderRadius: '22px'\n              },\n              onClick: handleskip,\n              children: \"Skip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: TableRes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Screen, \"if9UNPDwNkxHcRdbNxJkz6lr+Ys=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/screen.js"],"names":["useState","useEffect","useDispatch","useSelector","questions","Row","Col","Divider","Card","Button","Radio","Badge","Avatar","Countdown","StopWatch","AnswersAction","Skiptheoption","switcher","Table","swtichtheTimerON","swtichtheTimerFF","ResetTimer","Screen","ansARR","state","Submithandler","Answers","Answrshow","setAnswrshow","submittheAnswer","skiptheAnswer","timerswitcher","settimerswitcher","selected_option","set_selected_option","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","attempts","setattempts","dispatch","switcherstatus","Timerreducer","switch","isActive","setIsActive","isPaused","setIsPaused","time","setTime","handleclickoption","option","handleAnswerOptionClick","nextQuestion","length","handlesubmit","arr","handleskip","console","log","TableRes","marginBottom","borderRadius","textAlign","marginTop","marginLeft","color","backgroundColor","width","questionText","answerOptions","map","answerOption","marginRight","isCorrect","answerText"],"mappings":"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","sourcesContent":["// import Header from './Components/Header'\nimport { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions'\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './stopwatch'\nimport AnswersAction from '../redux/Answers/actions'\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nimport switcher from '../redux/Timer/actions'\nimport Table from './ResultTable'\nconst {swtichtheTimerON,swtichtheTimerFF,ResetTimer}=switcher\nfunction Screen() {\n    const ansARR = useSelector((state) => state.Submithandler.Answers);\n    const [Answrshow,setAnswrshow]=useState(false)\n\n  const {submittheAnswer,skiptheAnswer}=AnswersAction\n  const [timerswitcher,settimerswitcher]=useState(false)\n\n  const [selected_option,set_selected_option]=useState('')\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const[attempts,setattempts]=useState([0,0,0,0])\n\n  const dispatch = useDispatch();\nconst switcherstatus = useSelector((state) => state.Timerreducer.switch);\n\n  const [isActive, setIsActive] = useState(true);\nconst [isPaused, setIsPaused] = useState(false);\nconst [time, setTime] = useState(0);\n\n\n\n\n\n\n  \n// var i = setInterval(function() {\n//  console.log('hskskhksh')\n// }, 500);\n// if(showScore)(function(){\n//   clearInterval(i);\n// });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  \n\n  const handleclickoption = (option) => {\n\t\tset_selected_option(option)\n  };\n\n\n// var Countdown=(<h1>loding</h1>)\n//   useEffect(()=>{\n\n//   },[currentQuestion])\n\n\nconst handleAnswerOptionClick = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n    } else {\n        setShowScore(true);\n    }\n};\n\n  const handlesubmit = () => {\n\n    const arr=attempts\n    arr[currentQuestion]=selected_option\n    setattempts(arr)\n    set_selected_option('')\n    setCurrentQuestion(currentQuestion+1)\n    dispatch(submittheAnswer(currentQuestion,selected_option))\n    dispatch(ResetTimer())\n\n    // dispatch(swtichtheTimerON())\n\n  };\n\n\n  const handleskip = () => {\n    const arr=attempts\n    arr[currentQuestion]='NA'\n    setattempts(arr)\n    set_selected_option('')\n    setCurrentQuestion(currentQuestion+1)\n    dispatch(skiptheAnswer(currentQuestion))\n    dispatch(ResetTimer())\n\n};\n\n\n\nuseEffect(() => {\n    console.log('switchit')\n    if(switcherstatus=='yes'){\n        handleskip()\n\n    }\n\t\n}, [switcherstatus]);\n\n\nlet TableRes;\nuseEffect(() => {\n    console.log('switchit')\n    TableRes=(<Table Answers={ansARR}></Table>)\n\t\n}, [ansARR]);\n\n\n\n  \n  \n  console.log(attempts,'attemptsksjksks')\n\n\n\n  \n  \n\n\n\n  return (\n\n\t\t<div className='app'>\n     \n\n  \n\n\n\n\n\n<div>\n{currentQuestion<8?\n<div>\n      <Row>\n\n      \n      <Col span={6}>\n\t\t\t  \n\t\t\t\t<>\n        <Divider>\n\t\t\t\t\t<div className='question-section'>\n          \n\t\t\t\t\t\t<div className='question-count'>\n            <Card style={{marginBottom:'2vh',borderRadius:'25px',textAlign:'center',marginTop:'3vh',marginLeft:'3vh',color:'white',backgroundColor:'#660066',width:'10vw'}}>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n              </Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Card style={{width:'60vw',marginBottom:'2vh',borderRadius:'25px',textAlign:'left',marginLeft:'3vh',color:'white',backgroundColor:'#8600b3'}}>\n           \n              <div className='question-text'>{!showScore?questions[currentQuestion].questionText:''}</div></Card>\n\t\t\t\t\t</div>\n         </Divider>\n\t\t\t\t\t<div className='answer-section'>\n          <Row >\n\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n              \n                <Col md={12}>\n                  <Card style={{marginBottom:'3vh',marginLeft:'3vh'}}>\n                    <Button style={{marginBottom:'3vh',marginRight:'1vh',backgroundColor:'#6600cc'}} onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.option}</Button>\n                    \n                    {answerOption.option===selected_option?<Button style={{borderRadius:'25px',backgroundColor:'green'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\" >{answerOption.answerText}</Button> :<Button style={{borderRadius:'25px',backgroundColor:'#1a8cff'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\"  >\n                  {answerOption.answerText}\n        </Button>\n}\n                  \n\t\t\t\t\t\t\t{/* <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button> */}\n              \n              </Card>\n              </Col>\n\n\t\t\t\t\t\t))}\n            \n             </Row>\n             \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n      \n      </Col>\n\n      {/* <Col span={8} >{!showScore?<Table></Table>:''}</Col> */}\n      \n\n       \n      \n      </Row>\n\n\n      <Row>\n        <Col span={6} style={{marginLeft:'2vw'}}>\n          <Button style={{width:'10vw',marginLeft:'16vw',borderRadius:'22px'}} onClick={handlesubmit}>submit</Button>\n\n\n       \n          <Button style={{width:'10vw',marginLeft:'2vw',borderRadius:'22px'}} onClick={handleskip}>Skip</Button>\n\n\n        </Col>\n\n      </Row></div>:\n      <Row>{TableRes}</Row>}\n\n      </div>\n\n\n\n\n\n\t\t</div>)\n    \n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}