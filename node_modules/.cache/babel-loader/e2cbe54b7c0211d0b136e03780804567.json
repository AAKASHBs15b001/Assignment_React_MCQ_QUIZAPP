{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/screen.js\",\n    _s = $RefreshSig$();\n\n// import Header from './Components/Header'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './stopwatch';\nimport AnswersAction from '../redux/Answers/actions';\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nimport switcher from '../redux/Timer/actions';\nimport Table from './ResultTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  swtichtheTimerON,\n  swtichtheTimerFF,\n  ResetTimer\n} = switcher;\n\nfunction Screen() {\n  _s();\n\n  const ansArr = useSelector(state => state.Submithandler.Answers);\n  const [Answrshow, setAnswrshow] = useState(ansArr);\n  console.log(Answrshow, 'this is the answr shown after change');\n  const {\n    submittheAnswer,\n    skiptheAnswer\n  } = AnswersAction;\n  const [timerswitcher, settimerswitcher] = useState(false);\n  const [selected_option, set_selected_option] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [attempts, setattempts] = useState([0, 0, 0, 0]);\n  const dispatch = useDispatch();\n  const switcherstatus = useSelector(state => state.Timerreducer.switch);\n  const [isActive, setIsActive] = useState(true);\n  const [isPaused, setIsPaused] = useState(false);\n  const [time, setTime] = useState(0); // var i = setInterval(function() {\n  //  console.log('hskskhksh')\n  // }, 500);\n  // if(showScore)(function(){\n  //   clearInterval(i);\n  // });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  const handleclickoption = option => {\n    set_selected_option(option);\n  }; // var Countdown=(<h1>loding</h1>)\n  //   useEffect(()=>{\n  //   },[currentQuestion])\n\n\n  const handleAnswerOptionClick = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const handlesubmit = () => {\n    setAnswrshow(ansArr);\n    const arr = attempts;\n    arr[currentQuestion] = selected_option;\n    setattempts(arr);\n    set_selected_option('');\n    setCurrentQuestion(currentQuestion + 1);\n    dispatch(submittheAnswer(currentQuestion, selected_option));\n    dispatch(ResetTimer()); // dispatch(swtichtheTimerON())\n  };\n\n  const handleskip = () => {\n    const arr = attempts;\n    arr[currentQuestion] = 'NA';\n    setattempts(arr);\n    set_selected_option('');\n    setCurrentQuestion(currentQuestion + 1);\n    dispatch(skiptheAnswer(currentQuestion));\n    dispatch(ResetTimer());\n  };\n\n  useEffect(() => {\n    console.log('switchit');\n\n    if (switcherstatus == 'yes') {\n      handleskip();\n    }\n  }, [switcherstatus]);\n  useEffect(() => {\n    console.log('switchit ab aayega mazaa');\n  }, [Answrshow]);\n  console.log(attempts, 'attemptsksjksks');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion < 8 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderStyle: 'solid',\n          border: 'solid 0.1px gray',\n          marginLeft: '2vh',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-count\",\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '2vh',\n                        borderRadius: '25px',\n                        textAlign: 'center',\n                        marginTop: '3vh',\n                        marginLeft: '3vh',\n                        color: 'white',\n                        backgroundColor: '#99e6e6',\n                        width: '10vw'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Question \", currentQuestion + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 8\n                      }, this), \"/\", questions.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      width: '40vw',\n                      marginBottom: '2vh',\n                      borderRadius: '25px',\n                      textAlign: 'left',\n                      marginLeft: '3vh',\n                      color: 'white',\n                      backgroundColor: '#ccffff'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-text\",\n                      children: !showScore ? questions[currentQuestion].questionText : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-section\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '3vh',\n                        marginLeft: '3vh'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        type: \"primary\",\n                        style: {\n                          marginBottom: '3vh',\n                          marginRight: '1vh'\n                        },\n                        children: answerOption.option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 21\n                      }, this), answerOption.option === selected_option ? /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: '#99bbff',\n                          color: 'Blue'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 60\n                      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: '#1a8cff',\n                          color: 'white'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 275\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(StopWatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginBottom: '2vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    width: '15vw',\n                    borderRadius: '22px',\n                    backgroundColor: '#ff99ff'\n                  },\n                  onClick: handlesubmit,\n                  children: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    width: '15vw',\n                    borderRadius: '22px',\n                    backgroundColor: '#80ffff'\n                  },\n                  onClick: handleskip,\n                  children: \"Skip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        Answers: Answrshow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Screen, \"FW5sOz30J6dvplD+lFzQ0tJAJY8=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Screen;\nexport default Screen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/screen.js"],"names":["useState","useEffect","useDispatch","useSelector","questions","Row","Col","Divider","Card","Button","Radio","Badge","Avatar","Countdown","StopWatch","AnswersAction","Skiptheoption","switcher","Table","swtichtheTimerON","swtichtheTimerFF","ResetTimer","Screen","ansArr","state","Submithandler","Answers","Answrshow","setAnswrshow","console","log","submittheAnswer","skiptheAnswer","timerswitcher","settimerswitcher","selected_option","set_selected_option","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","attempts","setattempts","dispatch","switcherstatus","Timerreducer","switch","isActive","setIsActive","isPaused","setIsPaused","time","setTime","handleclickoption","option","handleAnswerOptionClick","nextQuestion","length","handlesubmit","arr","handleskip","borderStyle","border","marginLeft","marginTop","marginBottom","borderRadius","textAlign","color","backgroundColor","width","questionText","answerOptions","map","answerOption","marginRight","answerText"],"mappings":"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","sourcesContent":["// import Header from './Components/Header'\nimport { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions'\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './stopwatch'\nimport AnswersAction from '../redux/Answers/actions'\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nimport switcher from '../redux/Timer/actions'\nimport Table from './ResultTable'\nconst {swtichtheTimerON,swtichtheTimerFF,ResetTimer}=switcher\nfunction Screen() {\n    const ansArr=useSelector((state) => state.Submithandler.Answers)\n    const [Answrshow,setAnswrshow]=useState(ansArr)\n    \n    console.log(Answrshow,'this is the answr shown after change')\n  const {submittheAnswer,skiptheAnswer}=AnswersAction\n  const [timerswitcher,settimerswitcher]=useState(false)\n\n  const [selected_option,set_selected_option]=useState('')\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const[attempts,setattempts]=useState([0,0,0,0])\n\n  const dispatch = useDispatch();\nconst switcherstatus = useSelector((state) => state.Timerreducer.switch);\n\n  const [isActive, setIsActive] = useState(true);\nconst [isPaused, setIsPaused] = useState(false);\nconst [time, setTime] = useState(0);\n\n\n\n\n\n\n  \n// var i = setInterval(function() {\n//  console.log('hskskhksh')\n// }, 500);\n// if(showScore)(function(){\n//   clearInterval(i);\n// });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  \n\n  const handleclickoption = (option) => {\n\t\tset_selected_option(option)\n  };\n\n\n// var Countdown=(<h1>loding</h1>)\n//   useEffect(()=>{\n\n//   },[currentQuestion])\n\n\nconst handleAnswerOptionClick = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n    } else {\n        setShowScore(true);\n    }\n};\n\n  const handlesubmit = () => {\n    setAnswrshow(ansArr)\n    const arr=attempts\n    arr[currentQuestion]=selected_option\n    setattempts(arr)\n    set_selected_option('')\n    setCurrentQuestion(currentQuestion+1)\n    dispatch(submittheAnswer(currentQuestion,selected_option))\n    dispatch(ResetTimer())\n\n    // dispatch(swtichtheTimerON())\n\n  };\n\n\n  const handleskip = () => {\n    const arr=attempts\n    arr[currentQuestion]='NA'\n    setattempts(arr)\n    set_selected_option('')\n    setCurrentQuestion(currentQuestion+1)\n    dispatch(skiptheAnswer(currentQuestion))\n    dispatch(ResetTimer())\n\n};\n\n\n\nuseEffect(() => {\n    console.log('switchit')\n    if(switcherstatus=='yes'){\n        handleskip()\n\n    }\n\t\n}, [switcherstatus]);\n\n\n\n\n\nuseEffect(() => {\n    console.log('switchit ab aayega mazaa')\n   \n\t\n}, [Answrshow]);\n\n\n\n\n\n  \n  \n  console.log(attempts,'attemptsksjksks')\n\n\n\n  \n  \n\n\n\n  return (\n\n\t\t<div className='app'>\n     \n\n  \n\n\n\n\n\n<div>\n{currentQuestion<8?\n<div style={{borderStyle:'solid',border:'solid 0.1px gray',marginLeft:'2vh',marginTop:'2vh'}}>\n\n\n\n\n      <Row>\n\n      \n      <Col md={6}>\n\t\t\t  \n\t\t\t\t<>\n        <Divider>\n\t\t\t\t\t<div className='question-section'>\n          \n\t\t\t\t\t\t<div className='question-count' >\n            <Card   style={{marginBottom:'2vh',borderRadius:'25px',textAlign:'center',marginTop:'3vh',marginLeft:'3vh',color:'white',backgroundColor:'#99e6e6',width:'10vw'}}>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n              </Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Card style={{width:'40vw',marginBottom:'2vh',borderRadius:'25px',textAlign:'left',marginLeft:'3vh',color:'white',backgroundColor:'#ccffff'}}>\n           \n              <div className='question-text'>{!showScore?questions[currentQuestion].questionText:''}</div></Card>\n\t\t\t\t\t</div>\n         </Divider>\n\t\t\t\t\t<div className='answer-section'>\n          <Row >\n\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n              \n                <Col md={12}>\n                  <Card style={{marginBottom:'3vh',marginLeft:'3vh'}}>\n                    <Button type=\"primary\"  style={{marginBottom:'3vh',marginRight:'1vh'}} >{answerOption.option}</Button>\n                    \n                    {answerOption.option===selected_option?<Button style={{borderRadius:'25px',backgroundColor:'#99bbff',color:'Blue'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\" >{answerOption.answerText}</Button> :<Button style={{borderRadius:'25px',backgroundColor:'#1a8cff',color:'white'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\"  >\n                  {answerOption.answerText}\n        </Button>\n}\n                  \n\t\t\t\t\t\t\t{/* <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button> */}\n              \n              </Card>\n              </Col>\n\n\t\t\t\t\t\t))}\n            \n             </Row>\n            \n             \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n      \n      </Col>\n\n\n  <Col md={3} ><StopWatch></StopWatch></Col>\n     \n\n       \n      \n      </Row>\n\n<Card style={{marginBottom:'2vh'}}>\n      <Row>\n        <Col md={6} >\n            <div style={{textAlign:'center'}}>\n            \n          <Button style={{width:'15vw',borderRadius:'22px',backgroundColor:'#ff99ff'}} onClick={handlesubmit}>submit</Button>\n          </div>\n          </Col>\n          <Col  md={6}>\n          <div style={{textAlign:'center'}}>\n          <Button style={{width:'15vw',borderRadius:'22px',backgroundColor:'#80ffff'}} onClick={handleskip}>Skip</Button>\n          </div>\n          </Col>\n        \n\n      </Row> </Card></div>:\n\n\n      <Table Answers={Answrshow}></Table>}\n\n      </div>\n\n\n\n\n\t\t</div>)\n    \n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}