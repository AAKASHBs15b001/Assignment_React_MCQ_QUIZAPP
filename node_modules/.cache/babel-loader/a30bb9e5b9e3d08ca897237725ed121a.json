{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './Components/Header';\nimport { useState, useEffect } from \"react\";\nimport questions from './Questions';\nimport { Container } from 'react-bootstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd'; // import { Row, Col } from 'antd';\n\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './Components/stopwatch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [seconds, setSeconds] = useState(1);\n  const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\n\n  const [selected_option, set_selected_option] = useState('');\n  useEffect(() => {}, []); // var i = setInterval(function() {\n  //  console.log('hskskhksh')\n  // }, 500);\n  // if(showScore)(function(){\n  //   clearInterval(i);\n  // });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [attempts, setattempts] = useState([0, 0, 0, 0]);\n\n  const handleclickoption = option => {\n    set_selected_option(option);\n  };\n\n  const handlesubmit = () => {\n    const arr = attempts;\n    arr[currentQuestion] = selected_option;\n    setattempts(arr);\n    handleAnswerOptionClick(true);\n    set_selected_option('');\n  };\n\n  const handleskip = () => {\n    const arr = attempts;\n    arr[currentQuestion] = 'NA';\n    setattempts(arr);\n    handleAnswerOptionClick(true);\n    set_selected_option('');\n  };\n\n  const sksk = () => {\n    console.log('skjks');\n  };\n\n  var myVar = setInterval(sksk, 3000); // setInterval(sksk,1000)\n\n  if (currentQuestion == 3) {\n    clearInterval(myVar);\n  }\n\n  console.log(attempts, 'attemptsksjksks');\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  function onChange(val) {\n    if (4.95 * 1000 < val && val < 5 * 1000) {\n      console.log('changed!');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(StopWatch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"question-count\",\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '2vh',\n                        borderRadius: '25px',\n                        textAlign: 'center',\n                        marginTop: '3vh',\n                        marginLeft: '3vh',\n                        color: 'white',\n                        backgroundColor: '#660066',\n                        width: '10vw'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Question \", currentQuestion + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 8\n                      }, this), \"/\", questions.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(Card, {\n                    style: {\n                      width: '60vw',\n                      marginBottom: '2vh',\n                      borderRadius: '25px',\n                      textAlign: 'left',\n                      marginLeft: '3vh',\n                      color: 'white',\n                      backgroundColor: '#8600b3'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"question-text\",\n                      children: questions[currentQuestion].questionText\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 6\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"answer-section\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      style: {\n                        marginBottom: '3vh',\n                        marginLeft: '3vh'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          marginBottom: '3vh',\n                          marginRight: '1vh',\n                          backgroundColor: '#6600cc'\n                        },\n                        onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n                        children: answerOption.option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 21\n                      }, this), answerOption.option === selected_option ? /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: 'green'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 60\n                      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                        style: {\n                          borderRadius: '25px',\n                          backgroundColor: '#1a8cff'\n                        },\n                        type: \"primary\",\n                        bordered: \"false\",\n                        onClick: () => handleclickoption(answerOption.option),\n                        shape: \"round\",\n                        children: answerOption.answerText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 260\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 6,\n            children: \"ksksjk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 4,\n            style: {\n              marginLeft: '20vw'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '13vw',\n                marginLeft: '16vw',\n                borderRadius: '22px'\n              },\n              onClick: handlesubmit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: '10vw',\n                marginLeft: '2vw',\n                borderRadius: '22px'\n              },\n              onClick: handleskip,\n              children: \"Skip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }, this) : /*#__PURE__*/_jsxDEV(Row, {\n        children: \"Table to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"jTj4nIncltLDYXojLj69Y9TyATI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js"],"names":["Header","useState","useEffect","questions","Container","Row","Col","Divider","Card","Button","Radio","Badge","Avatar","Countdown","StopWatch","App","seconds","setSeconds","deadline","Date","now","selected_option","set_selected_option","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","attempts","setattempts","handleclickoption","option","handlesubmit","arr","handleAnswerOptionClick","handleskip","sksk","console","log","myVar","setInterval","clearInterval","isCorrect","nextQuestion","length","onChange","val","marginBottom","borderRadius","textAlign","marginTop","marginLeft","color","backgroundColor","width","questionText","answerOptions","map","answerOption","marginRight","answerText"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header'\nimport { useState,useEffect} from \"react\";\nimport questions from './Questions'\nimport { Container } from 'react-bootstrap';\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\n// import { Row, Col } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './Components/stopwatch'\nfunction App() {\n  const [seconds, setSeconds] = useState(1);\n  const deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 30; // Moment is also OK\n\n  const [selected_option,set_selected_option]=useState('')\n\n  useEffect(()=>{\n\n  },[])\n\n// var i = setInterval(function() {\n//  console.log('hskskhksh')\n// }, 500);\n// if(showScore)(function(){\n//   clearInterval(i);\n// });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  \n  const[attempts,setattempts]=useState([0,0,0,0])\n\n  const handleclickoption = (option) => {\n\t\tset_selected_option(option)\n  };\n\n\n\n  const handlesubmit = () => {\n    const arr=attempts\n    arr[currentQuestion]=selected_option\n    setattempts(arr)\n    handleAnswerOptionClick(true)\n    set_selected_option('')\n\n  };\n\n\n  const handleskip = () => {\n    const arr=attempts\n    arr[currentQuestion]='NA'\n    setattempts(arr)\n    handleAnswerOptionClick(true)\n    set_selected_option('')\n\n  };\n\n  const sksk = () => {\n   console.log('skjks')\n\n  };\n\n\n  \n  var myVar =setInterval(sksk,3000)\n  \n    // setInterval(sksk,1000)\n\n  \n    if (currentQuestion==3){\n      clearInterval(myVar)\n\n\n    }\n\n\n\n\n  \n  \n\n  \n  \n  console.log(attempts,'attemptsksjksks')\n\n\n  const handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n  };\n\n  function onChange(val) {\n    if (4.95 * 1000 < val && val < 5 * 1000) {\n      console.log('changed!');\n    }\n  }\n  \n\n\n\n  return (\n\n\n\n\n\n\n\n\n\n\t\t<div className='app'>\n\n\n\n\n\n\n\n\n\n      <Header></Header>\n\n  \n\n<div>\n{!showScore?\n<div>\n      <Row>\n\n      <StopWatch />\n      <Col span={6}>\n\t\t\t  \n\t\t\t\t<>\n        <Divider>\n\t\t\t\t\t<div className='question-section'>\n          \n\t\t\t\t\t\t<div className='question-count'>\n            <Card style={{marginBottom:'2vh',borderRadius:'25px',textAlign:'center',marginTop:'3vh',marginLeft:'3vh',color:'white',backgroundColor:'#660066',width:'10vw'}}>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n              </Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Card style={{width:'60vw',marginBottom:'2vh',borderRadius:'25px',textAlign:'left',marginLeft:'3vh',color:'white',backgroundColor:'#8600b3'}}>\n           \n              <div className='question-text'>{questions[currentQuestion].questionText}</div></Card>\n\t\t\t\t\t</div>\n         </Divider>\n\t\t\t\t\t<div className='answer-section'>\n          <Row >\n\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n              \n                <Col md={12}>\n                  <Card style={{marginBottom:'3vh',marginLeft:'3vh'}}>\n                    <Button style={{marginBottom:'3vh',marginRight:'1vh',backgroundColor:'#6600cc'}} onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.option}</Button>\n                    \n                    {answerOption.option===selected_option?<Button style={{borderRadius:'25px',backgroundColor:'green'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\" >{answerOption.answerText}</Button> :<Button style={{borderRadius:'25px',backgroundColor:'#1a8cff'}} type=\"primary\" bordered='false' onClick={() => handleclickoption(answerOption.option)} shape=\"round\"  >\n                  {answerOption.answerText}\n        </Button>\n}\n                  \n\t\t\t\t\t\t\t{/* <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button> */}\n              \n              </Card>\n              </Col>\n\n\t\t\t\t\t\t))}\n            \n             </Row>\n             \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n      \n      </Col>\n\n      <Col span={6}>ksksjk</Col>\n      \n\n       \n      \n      </Row>\n\n\n      <Row>\n        <Col span={4} style={{marginLeft:'20vw'}}>\n          <Button style={{width:'13vw',marginLeft:'16vw',borderRadius:'22px'}} onClick={handlesubmit}>submit</Button>\n\n\n       \n          <Button style={{width:'10vw',marginLeft:'2vw',borderRadius:'22px'}} onClick={handleskip}>Skip</Button>\n\n\n        </Col>\n\n      </Row></div>:\n      <Row>Table to show</Row>}\n\n\n\n\n\n      \n\n\n      </div>\n\n\n\n\n\n\t\t</div>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}