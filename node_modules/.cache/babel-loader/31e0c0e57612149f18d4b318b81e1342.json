{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './Components/Header';\nimport { useState } from \"react\";\nimport questions from './Questions';\nimport { Container } from 'react-bootstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd'; // import { Row, Col } from 'antd';\n\nimport { Card } from 'antd';\nimport { Button, Radio, Badge } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false,\n      option: 'A'\n    }, {\n      answerText: 'London',\n      isCorrect: false,\n      option: 'B'\n    }, {\n      answerText: 'Paris',\n      isCorrect: true,\n      option: 'C'\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false,\n      option: 'D'\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false,\n      option: 'A'\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true,\n      option: 'B'\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false,\n      option: 'C'\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false,\n      option: 'D'\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true,\n      option: 'A'\n    }, {\n      answerText: 'Intel',\n      isCorrect: false,\n      option: 'B'\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false,\n      option: 'C'\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false,\n      option: 'D'\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false,\n      option: 'A'\n    }, {\n      answerText: '4',\n      isCorrect: false,\n      option: 'B'\n    }, {\n      answerText: '6',\n      isCorrect: false,\n      option: 'C'\n    }, {\n      answerText: '7',\n      isCorrect: true,\n      option: 'D'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerOptionClick = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-section\",\n          children: [\"You scored \", score, \" out of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"question-count\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    marginBottom: '2vh',\n                    borderRadius: '25px',\n                    textAlign: 'center',\n                    marginTop: '3vh',\n                    marginLeft: '3vh',\n                    color: 'white',\n                    backgroundColor: '#660066',\n                    width: '10vw'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Question \", currentQuestion + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 8\n                  }, this), \"/\", questions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  marginBottom: '2vh',\n                  borderRadius: '25px',\n                  textAlign: 'left',\n                  marginLeft: '3vh',\n                  color: 'white',\n                  backgroundColor: '#8600b3'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-text\",\n                  children: questions[currentQuestion].questionText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 136\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(Col, {\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    marginBottom: '3vh',\n                    marginLeft: '3vh'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    children: answerOption.option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"primary\",\n                    onClick: () => handleAnswerOptionClick(answerOption.isCorrect),\n                    shape: \"round\",\n                    children: answerOption.answerText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        children: \"jshsjshjs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js"],"names":["Header","useState","questions","Container","Row","Col","Divider","Card","Button","Radio","Badge","App","questionText","answerOptions","answerText","isCorrect","option","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerOptionClick","nextQuestion","length","marginBottom","borderRadius","textAlign","marginTop","marginLeft","color","backgroundColor","width","map","answerOption"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header'\nimport { useState } from \"react\";\nimport questions from './Questions'\nimport { Container } from 'react-bootstrap';\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\n// import { Row, Col } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio,Badge } from 'antd';\n\nfunction App() {\n\n\n\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [\n        { answerText: 'New York', isCorrect: false,option:'A' },\n        { answerText: 'London', isCorrect: false,option:'B'},\n        { answerText: 'Paris', isCorrect: true,option:'C'},\n        { answerText: 'Dublin', isCorrect: false,option:'D' },\n    ],\n},\n{\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [\n        { answerText: 'Jeff Bezos', isCorrect: false,option:'A' },\n        { answerText: 'Elon Musk', isCorrect: true ,option:'B'},\n        { answerText: 'Bill Gates', isCorrect: false,option:'C' },\n        { answerText: 'Tony Stark', isCorrect: false,option:'D' },\n    ],\n},\n{\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [\n        { answerText: 'Apple', isCorrect: true,option:'A' },\n        { answerText: 'Intel', isCorrect: false,option:'B' },\n        { answerText: 'Amazon', isCorrect: false,option:'C' },\n        { answerText: 'Microsoft', isCorrect: false,option:'D'},\n    ],\n},\n{\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [\n        { answerText: '1', isCorrect: false,option:'A' },\n        { answerText: '4', isCorrect: false,option:'B' },\n        { answerText: '6', isCorrect: false,option:'C' },\n        { answerText: '7', isCorrect: true,option:'D' },\n    ],\n},\n];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\n\n\n  const handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\n\n\n\n\n\n\n\n\n\n  return (\n\t\t<div className='app'>\n      \n\n\n      <Header></Header>\n      <Row>\n        <Col span={6}>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n        <Divider>\n\t\t\t\t\t<div className='question-section'>\n          \n\t\t\t\t\t\t<div className='question-count'>\n            <Card style={{marginBottom:'2vh',borderRadius:'25px',textAlign:'center',marginTop:'3vh',marginLeft:'3vh',color:'white',backgroundColor:'#660066',width:'10vw'}}>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n              </Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Card style={{marginBottom:'2vh',borderRadius:'25px',textAlign:'left',marginLeft:'3vh',color:'white',backgroundColor:'#8600b3'}}><div className='question-text'>{questions[currentQuestion].questionText}</div></Card>\n\t\t\t\t\t</div>\n         </Divider>\n\t\t\t\t\t<div className='answer-section'>\n          <Row >\n\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n              \n                <Col md={12}>\n                  <Card style={{marginBottom:'3vh',marginLeft:'3vh'}}>\n                    <Button>{answerOption.option}</Button>\n                  <Button type=\"primary\" onClick={() => handleAnswerOptionClick(answerOption.isCorrect)} shape=\"round\"  >\n                  {answerOption.answerText}\n        </Button>\n                  \n\t\t\t\t\t\t\t{/* <button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button> */}\n              \n              </Card>\n              </Col>\n              \n             \n\t\t\t\t\t\t))}\n\n             </Row>\n             \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n      \n      </Col>\n      <Col span={6}>jshsjshjs</Col>\n\n\n      </Row>\n\t\t</div>)\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}