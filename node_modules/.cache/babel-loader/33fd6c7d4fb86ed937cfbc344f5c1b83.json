{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './Components/Header';\nimport { Provider } from 'react-redux'; // import AppProvider from './AppProvider';\n\nimport { store } from './store';\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from './Questions';\nimport { Container } from 'react-bootstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { Divider } from 'antd'; // import { Row, Col } from 'antd';\n\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './Components/stopwatch';\nimport AnswersAction from './redux/Answers/actions';\nimport Screen from './Components/screen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    submittheAnswer,\n    skiptheAnswer\n  } = AnswersAction;\n  const [selected_option, set_selected_option] = useState('');\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [attempts, setattempts] = useState([0, 0, 0, 0]);\n  const dispatch = useDispatch(); // var i = setInterval(function() {\n  //  console.log('hskskhksh')\n  // }, 500);\n  // if(showScore)(function(){\n  //   clearInterval(i);\n  // });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  const handleclickoption = option => {\n    set_selected_option(option);\n  }; // var Countdown=(<h1>loding</h1>)\n  //   useEffect(()=>{\n  //   },[currentQuestion])\n\n\n  const handlesubmit = () => {\n    const arr = attempts;\n    arr[currentQuestion] = selected_option;\n    setattempts(arr);\n    handleAnswerOptionClick(true);\n    set_selected_option('');\n    dispatch(submittheAnswer(currentQuestion, selected_option));\n  };\n\n  const handleskip = () => {\n    const arr = attempts;\n    arr[currentQuestion] = 'NA';\n    setattempts(arr);\n    handleAnswerOptionClick(true);\n    set_selected_option('');\n  };\n\n  console.log(attempts, 'attemptsksjksks');\n\n  const handleAnswerOptionClick = () => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Screen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"lJ0jvxoKs/WG4c/2i7foIxJxdvA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/App.js"],"names":["Header","Provider","store","useState","useEffect","useDispatch","useSelector","questions","Container","Row","Col","Divider","Card","Button","Radio","Badge","Avatar","Countdown","StopWatch","AnswersAction","Screen","App","submittheAnswer","skiptheAnswer","selected_option","set_selected_option","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","attempts","setattempts","dispatch","handleclickoption","option","handlesubmit","arr","handleAnswerOptionClick","handleskip","console","log","nextQuestion","length"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/Header'\nimport { Provider } from 'react-redux';\n// import AppProvider from './AppProvider';\nimport { store } from './store';\n\nimport { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport questions from './Questions'\nimport { Container } from 'react-bootstrap';\nimport {Row,Col} from 'react-bootstrap'\nimport { Divider } from 'antd';\n// import { Row, Col } from 'antd';\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\nimport Countdown from 'react-countdown';\nimport StopWatch from './Components/stopwatch'\nimport AnswersAction from './redux/Answers/actions'\nimport Screen from './Components/screen'\nfunction App() {\n  const{submittheAnswer,skiptheAnswer}=AnswersAction\n  const [selected_option,set_selected_option]=useState('')\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const[attempts,setattempts]=useState([0,0,0,0])\n  const dispatch = useDispatch();\n\n  \n// var i = setInterval(function() {\n//  console.log('hskskhksh')\n// }, 500);\n// if(showScore)(function(){\n//   clearInterval(i);\n// });\n  // useInterval(handleAnswerOptionClick(false), 100000, 5);\n\n  \n  \n\n  const handleclickoption = (option) => {\n\t\tset_selected_option(option)\n  };\n\n\n// var Countdown=(<h1>loding</h1>)\n//   useEffect(()=>{\n\n//   },[currentQuestion])\n\n\n\n  const handlesubmit = () => {\n    const arr=attempts\n    arr[currentQuestion]=selected_option\n    setattempts(arr)\n    handleAnswerOptionClick(true)\n    set_selected_option('')\n    dispatch(submittheAnswer(currentQuestion,selected_option))\n  };\n\n\n  const handleskip = () => {\n    const arr=attempts\n    arr[currentQuestion]='NA'\n    setattempts(arr)\n    handleAnswerOptionClick(true)\n    set_selected_option('')\n};\n\n  \n\n\n\n\n  \n  \n\n  \n  \n  console.log(attempts,'attemptsksjksks')\n\n\n  const handleAnswerOptionClick = () => {\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n  };\n\n  \n  \n\n\n\n  return (\n\n<Provider store={store}>\n\t\t<div className='app'>\n      <Header></Header>\n      <Screen></Screen>\n\n\n\n\n\t\t</div></Provider>)\n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}