{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"./Timer\";\nimport ControlButtons from \"./controlbutton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport switcher from '../redux/Timer/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  swtichtheTimerON,\n  swtichtheTimerFF\n} = switcher;\n\nfunction StopWatch({\n  currentQues,\n  stopIT\n}) {\n  _s();\n\n  const [isActive, setIsActive] = useState(true);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currq, setcurrq] = useState(currentQues);\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n\n  if (stopIT == true) {\n    setIsPaused(true);\n  }\n\n  const switcherstatus = useSelector(state => state.Timerreducer.switch);\n  console.log(currentQues, 'bhaiya time dekhlo');\n  React.useEffect(() => {\n    let interval = null;\n\n    if (isActive < 3 && !isPaused) {\n      interval = setInterval(() => {\n        setTime(time => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, isPaused]);\n\n  if (time > 5000) {\n    setIsActive(false);\n    setTime(0);\n  }\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(!isPaused);\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n    setTime(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stop-watch\",\n    children: /*#__PURE__*/_jsxDEV(Timer, {\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 2\n  }, this);\n}\n\n_s(StopWatch, \"g1UtH1CxJKV26hBjrdvqCwQ9OZM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/stopwatch.js"],"names":["React","useState","Timer","ControlButtons","useDispatch","useSelector","switcher","swtichtheTimerON","swtichtheTimerFF","StopWatch","currentQues","stopIT","isActive","setIsActive","isPaused","setIsPaused","currq","setcurrq","time","setTime","dispatch","switcherstatus","state","Timerreducer","switch","console","log","useEffect","interval","setInterval","clearInterval","handleStart","handlePauseResume","handleReset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,MAAM;AAACC,EAAAA,gBAAD;AAAkBC,EAAAA;AAAlB,IAAoCF,QAA1C;;AACA,SAASG,SAAT,CAAmB;AAACC,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAnB,EAAyC;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACS,WAAD,CAAlC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMmB,QAAQ,GAAGhB,WAAW,EAA5B;;AAEA,MAAIO,MAAM,IAAE,IAAZ,EAAiB;AACbI,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACD,QAAMM,cAAc,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,MAA/B,CAAlC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ,EAAwB,oBAAxB;AAEAV,EAAAA,KAAK,CAAC2B,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAQ,GAAG,IAAf;;AACH,QAAIhB,QAAQ,GAAC,CAAT,IAAc,CAACE,QAAnB,EAA6B;AAC7Bc,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC5BV,QAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,EAAlB,CAAP;AACA,OAFqB,EAEnB,EAFmB,CAAtB;AAGC,KAJD,MAIO;AACPY,MAAAA,aAAa,CAACF,QAAD,CAAb;AACC;;AACD,WAAO,MAAM;AACbE,MAAAA,aAAa,CAACF,QAAD,CAAb;AACC,KAFD;AAGA,GAZD,EAYG,CAAChB,QAAD,EAAWE,QAAX,CAZH;;AAeA,MAAII,IAAI,GAAC,IAAT,EAAc;AACVL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,IAAAA,OAAO,CAAC,CAAD,CAAP;AAEH;;AAED,QAAMY,WAAW,GAAG,MAAM;AACzBlB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAHD;;AAKA,QAAMiB,iBAAiB,GAAG,MAAM;AAC/BjB,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,GAFD;;AAIA,QAAMmB,WAAW,GAAG,MAAM;AACzBpB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,IAAAA,OAAO,CAAC,CAAD,CAAP;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAKC;;GAvDQT,S;UAMQL,W,EAKMC,W;;;KAXdI,S;AAyDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"./Timer\";\nimport ControlButtons from \"./controlbutton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport switcher from '../redux/Timer/actions'\nconst {swtichtheTimerON,swtichtheTimerFF}=switcher\nfunction StopWatch({currentQues,stopIT}) {\nconst [isActive, setIsActive] = useState(true);\nconst [isPaused, setIsPaused] = useState(false);\nconst [currq, setcurrq] = useState(currentQues);\n\nconst [time, setTime] = useState(0);\nconst dispatch = useDispatch();\n\nif (stopIT==true){\n    setIsPaused(true)\n}\nconst switcherstatus = useSelector((state) => state.Timerreducer.switch);\n\nconsole.log(currentQues,'bhaiya time dekhlo')\n\nReact.useEffect(() => {\n    let interval = null;\n\tif (isActive<3 && !isPaused) {\n\tinterval = setInterval(() => {\n\t\tsetTime((time) => time + 10);\n\t}, 10);\n\t} else {\n\tclearInterval(interval);\n\t}\n\treturn () => {\n\tclearInterval(interval);\n\t};\n}, [isActive, isPaused]);\n\n\nif (time>5000){  \n    setIsActive(false)\n    setTime(0)\n    \n}\n\nconst handleStart = () => {\n\tsetIsActive(true);\n\tsetIsPaused(false);\n};\n\nconst handlePauseResume = () => {\n\tsetIsPaused(!isPaused);\n};\n\nconst handleReset = () => {\n\tsetIsActive(false);\n\tsetTime(0);\n};\n\nreturn (\n\t<div className=\"stop-watch\">\n\t<Timer time={time} />\n\t</div>\n);\n}\n\nexport default StopWatch;\n"]},"metadata":{},"sourceType":"module"}