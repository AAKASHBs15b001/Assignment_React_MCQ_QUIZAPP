{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/ResultTable.js\",\n    _s = $RefreshSig$();\n\n// import Header from './Components/Header'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions';\nimport { Row, Col } from 'react-bootstrap';\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table({\n  Answers\n}) {\n  _s();\n\n  const ansARR = useSelector(state => state.Submithandler.Answers);\n  let divi;\n  const score = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          borderRadius: '22px',\n          marginLeft: '10vw',\n          marginRight: '2vw',\n          marginTop: '5vh',\n          backgroundColor: ' #4dd2ff'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: questions.map(question => {\n            const ans = question.answerOptions.find(optiona => optiona['isCorrect'] === true).option;\n\n            if (ansARR[question.QuesNo - 1] === ans) {\n              score += 1;\n            }\n\n            console.log(ans);\n            return /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  textAlign: 'center',\n                  borderRadius: '22px',\n                  widht: '15vw',\n                  height: '10vh',\n                  marginLeft: '2vw',\n                  marginRight: '2vw',\n                  marginTop: '5vh',\n                  marginBottom: '5vh',\n                  backgroundColor: ' #00ff00'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    backgroundColor: 'white'\n                  },\n                  children: [\"Question:\", question.QuesNo]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  children: ansARR[question.QuesNo - 1] === ans ? 'right' : 'wrong'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Table, \"qxPHRS09SY7TLgC0OvMlqq3KmM4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/ResultTable.js"],"names":["useState","useEffect","useDispatch","useSelector","questions","Row","Col","Card","Button","Radio","Badge","Avatar","Table","Answers","ansARR","state","Submithandler","divi","score","borderRadius","marginLeft","marginRight","marginTop","backgroundColor","map","question","ans","answerOptions","find","optiona","option","QuesNo","console","log","textAlign","widht","height","marginBottom"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,GAAR,EAAYC,GAAZ,QAAsB,iBAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAuBC,KAAvB,EAA6BC,MAA7B,QAA2C,MAA3C;;;AAIA,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAA0B;AAAA;;AAEtB,QAAMC,MAAM,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBH,OAAhC,CAA1B;AACC,MAAII,IAAJ;AACA,QAAMC,KAAK,GAAC,CAAZ;AACD,sBAIJ;AAAA,2BAAK;AAAA,8BAAK,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAC,MAAd;AAAqBC,UAAAA,UAAU,EAAC,MAAhC;AAAuCC,UAAAA,WAAW,EAAC,KAAnD;AAAyDC,UAAAA,SAAS,EAAC,KAAnE;AAAyEC,UAAAA,eAAe,EAAC;AAAzF,SAAb;AAAA,+BACF,QAAC,GAAD;AAAA,oBACCnB,SAAS,CAACoB,GAAV,CAAcC,QAAQ,IAAE;AACzB,kBAAMC,GAAG,GAACD,QAAQ,CAACE,aAAT,CAAuBC,IAAvB,CAA4BC,OAAO,IAAEA,OAAO,CAAC,WAAD,CAAP,KAAuB,IAA5D,EAAkEC,MAA5E;;AACA,gBAAIhB,MAAM,CAACW,QAAQ,CAACM,MAAT,GAAgB,CAAjB,CAAN,KAA4BL,GAAhC,EAAoC;AAChCR,cAAAA,KAAK,IAAE,CAAP;AACH;;AACDc,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACI,gCAAQ,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACR,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAACQ,kBAAAA,SAAS,EAAC,QAAX;AAAoBf,kBAAAA,YAAY,EAAC,MAAjC;AAAwCgB,kBAAAA,KAAK,EAAC,MAA9C;AAAqDC,kBAAAA,MAAM,EAAC,MAA5D;AAAmEhB,kBAAAA,UAAU,EAAC,KAA9E;AAAoFC,kBAAAA,WAAW,EAAC,KAAhG;AAAsGC,kBAAAA,SAAS,EAAC,KAAhH;AAAsHe,kBAAAA,YAAY,EAAC,KAAnI;AAAyId,kBAAAA,eAAe,EAAC;AAAzJ,iBAAb;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,KAAK,EAAE;AAACA,oBAAAA,eAAe,EAAC;AAAjB,mBAAb;AAAA,0CAAkDE,QAAQ,CAACM,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,IAAD;AAAA,4BAAOjB,MAAM,CAACW,QAAQ,CAACM,MAAT,GAAgB,CAAjB,CAAN,KAA4BL,GAA5B,GAAgC,OAAhC,GAAwC;AAA/C;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,oBAAR;AAMX,WAZQ;AADD;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,cAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAJI;AA6BH;;GAlCQd,K;UAEUT,W;;;KAFVS,K;AAoCT,eAAeA,KAAf","sourcesContent":["// import Header from './Components/Header'\nimport { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions'\nimport {Row,Col} from 'react-bootstrap'\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\n\n\n\nfunction Table({Answers}) {\n\n    const ansARR = useSelector((state) => state.Submithandler.Answers);\n     let divi;\n     const score=0\n    return(\n\n        \n       \n<div><div><Card style={{borderRadius:'22px',marginLeft:'10vw',marginRight:'2vw',marginTop:'5vh',backgroundColor:' #4dd2ff'}}>\n        <Row>\n        {questions.map(question=>{\n        const ans=question.answerOptions.find(optiona=>optiona['isCorrect']===true).option\n        if (ansARR[question.QuesNo-1]===ans){\n            score+=1\n        }\n        console.log(ans)\n            return (<Col md={6}>\n            <Card style={{textAlign:'center',borderRadius:'22px',widht:'15vw',height:'10vh',marginLeft:'2vw',marginRight:'2vw',marginTop:'5vh',marginBottom:'5vh',backgroundColor:' #00ff00'}}>\n                <Card style={{backgroundColor:'white'}}>Question:{question.QuesNo}</Card>\n                <Card>{ansARR[question.QuesNo-1]===ans?'right':'wrong'}</Card>\n            </Card>\n            </Col>)\n})}\n        </Row>\n        </Card> </div>\n\n</div>\n   \n        \n    )\n\n  \n    \n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}