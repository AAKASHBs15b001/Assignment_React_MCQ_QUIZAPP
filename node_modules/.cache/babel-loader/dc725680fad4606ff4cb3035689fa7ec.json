{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/ResultTable.js\",\n    _s = $RefreshSig$();\n\n// import Header from './Components/Header'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions';\nimport { Row, Col } from 'react-bootstrap';\nimport { Card } from 'antd';\nimport { Button, Radio, Badge, Avatar } from 'antd';\nimport { CheckCircleTwoTone, CheckCircleFilled, CloseCircleFilled } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table({\n  Answers\n}) {\n  _s();\n\n  const ansARR = useSelector(state => state.Submithandler.Answers);\n  let divi;\n  let score = 0; //  const [score,setscore]=useState(0)\n\n  questions.map(question => {\n    const ans = question.answerOptions.find(optiona => optiona['isCorrect'] === true).option;\n    const Quesno = question.QuesNo;\n    const Attempted_answer = ansARR[Quesno - 1];\n\n    if (ans == Attempted_answer) {\n      score += 1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: '25px',\n      marginLeft: '10vw',\n      marginRight: '2vw',\n      marginTop: '5vh',\n      backgroundColor: ' #4dd2ff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: questions.map(question => {\n        const ans = question.answerOptions.find(optiona => optiona['isCorrect'] === true).option;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              textAlign: 'center',\n              borderRadius: '22px',\n              widht: '15vw',\n              height: '10vh',\n              marginLeft: '2vw',\n              marginRight: '2vw',\n              marginTop: '5vh',\n              marginBottom: '5vh',\n              backgroundColor: '#80dfff'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                backgroundColor: 'white'\n              },\n              children: [\"Question:\", question.QuesNo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              height: \"20vh\",\n              children: ansARR[question.QuesNo - 1] === 'NA' || ansARR[question.QuesNo - 1] == '' ? 'NA' : ansARR[question.QuesNo - 1] === ans ? /*#__PURE__*/_jsxDEV(CheckCircleFilled, {\n                style: {\n                  height: '1000px',\n                  color: '#0000b3'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 139\n              }, this) : /*#__PURE__*/_jsxDEV(CloseCircleFilled, {\n                style: {\n                  color: ' #ff3300'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 208\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'blue',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Score:\", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Table, \"qxPHRS09SY7TLgC0OvMlqq3KmM4=\", false, function () {\n  return [useSelector];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/ResultTable.js"],"names":["useState","useEffect","useDispatch","useSelector","questions","Row","Col","Card","Button","Radio","Badge","Avatar","CheckCircleTwoTone","CheckCircleFilled","CloseCircleFilled","Table","Answers","ansARR","state","Submithandler","divi","score","map","question","ans","answerOptions","find","optiona","option","Quesno","QuesNo","Attempted_answer","borderRadius","marginLeft","marginRight","marginTop","backgroundColor","textAlign","widht","height","marginBottom","color"],"mappings":"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","sourcesContent":["// import Header from './Components/Header'\nimport { useState,useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport questions from '../Questions'\nimport {Row,Col} from 'react-bootstrap'\nimport { Card } from 'antd';\nimport { Button, Radio,Badge,Avatar } from 'antd';\nimport {  CheckCircleTwoTone,CheckCircleFilled,CloseCircleFilled } from '@ant-design/icons';\n\n\n\nfunction Table({Answers}) {\n\n    const ansARR = useSelector((state) => state.Submithandler.Answers);\n     let divi;\n     let score=0\n    //  const [score,setscore]=useState(0)\n\n\n    questions.map(question=>{\n        const ans=question.answerOptions.find(optiona=>optiona['isCorrect']===true).option\n        const Quesno=question.QuesNo\n        const Attempted_answer=ansARR[Quesno-1]\n\n        if(ans==Attempted_answer){score+=1}\n    })\n\n\n\n\n\n\n\n\n\n\n\n\n    return(\n\n        \n       \n<Card style={{borderRadius:'25px',marginLeft:'10vw',marginRight:'2vw',marginTop:'5vh',backgroundColor:' #4dd2ff'}}>\n        <Row>\n        {\n        \n        \n        \n       \n        \n        questions.map(question=>{\n        const ans=question.answerOptions.find(optiona=>optiona['isCorrect']===true).option\n            return (<Col>\n            <Card style={{textAlign:'center',borderRadius:'22px',widht:'15vw',height:'10vh',marginLeft:'2vw',marginRight:'2vw',marginTop:'5vh',marginBottom:'5vh',backgroundColor:'#80dfff'}}>\n                <Card style={{backgroundColor:'white'}}>Question:{question.QuesNo}</Card>\n                <Card height='20vh'>{ansARR[question.QuesNo-1]==='NA'||ansARR[question.QuesNo-1]==''?'NA':ansARR[question.QuesNo-1]===ans?<CheckCircleFilled style={{height: '1000px',color: '#0000b3'}}/>:    <CloseCircleFilled  style={{color: ' #ff3300'}}/>\n}</Card>\n            </Card>\n            </Col>)\n})}\n        </Row>\n        <Card style={{backgroundColor:'blue',color:'white'}}>\n        <h3 >Score:{score}</h3>\n        </Card>\n        \n        </Card>\n       \n        \n        \n        \n        \n    )\n\n  \n    \n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}