{"ast":null,"code":"var _jsxFileName = \"/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/stopwatch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"./Timer\";\nimport ControlButtons from \"./controlbutton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport switcher from '../redux/Timer/actions';\nimport { ClockCircleTwoTone } from \"@ant-design/icons\";\nimport { Card } from \"antd\";\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  swtichtheTimerON,\n  swtichtheTimerFF\n} = switcher;\n\nfunction StopWatch({\n  currentQues,\n  stopIT\n}) {\n  _s();\n\n  const [isActive, setIsActive] = useState(true);\n  const [isPaused, setIsPaused] = useState(false);\n  const [currq, setcurrq] = useState(currentQues);\n  const switcherstatus = useSelector(state => state.Timerreducer.switch);\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n\n  if (stopIT == true) {\n    setIsPaused(true);\n  }\n\n  React.useEffect(() => {\n    console.log('switchit');\n\n    if (switcherstatus == 'yes') {\n      setTime(0); // dispatch(swtichtheTimerFF())\n    }\n\n    if (switcherstatus == 'reset') {\n      setTime(0);\n      dispatch(swtichtheTimerFF()); // dispatch(swtichtheTimerFF())\n    }\n  }, [switcherstatus]);\n  console.log(currentQues, 'bhaiya time dekhlo');\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(false);\n  };\n\n  React.useEffect(() => {\n    let interval = null;\n\n    if (time < 10000) {\n      interval = setInterval(() => {\n        setTime(time => time + 10);\n      }, 10);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isPaused]);\n\n  if (time > 15000) {\n    dispatch(swtichtheTimerON());\n    setTime(0);\n  }\n\n  const handleReset = () => {\n    setIsActive(true);\n    setTime(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stop-watch\",\n    style: {\n      borderRadius: '25px',\n      backgroundColor: '#cc33ff',\n      marginLeft: '50vw',\n      height: '40vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: '2vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(ClockCircleTwoTone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 2\n  }, this);\n}\n\n_s(StopWatch, \"CE5VN6+VuZfP9VmNZZNg2vXvT38=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StopWatch;\nexport default StopWatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"StopWatch\");","map":{"version":3,"sources":["/Users/gouraakash/Desktop/Assignment_SDE_React/src/Components/stopwatch.js"],"names":["React","useState","Timer","ControlButtons","useDispatch","useSelector","switcher","ClockCircleTwoTone","Card","Skiptheoption","swtichtheTimerON","swtichtheTimerFF","StopWatch","currentQues","stopIT","isActive","setIsActive","isPaused","setIsPaused","currq","setcurrq","switcherstatus","state","Timerreducer","switch","time","setTime","dispatch","useEffect","console","log","handleStart","interval","setInterval","clearInterval","handleReset","borderRadius","backgroundColor","marginLeft","height","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./StopWatch.css\";\nimport Timer from \"./Timer\";\nimport ControlButtons from \"./controlbutton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport switcher from '../redux/Timer/actions'\nimport { ClockCircleTwoTone } from \"@ant-design/icons\";\nimport { Card } from \"antd\";\n\nimport { Skiptheoption } from \"../redux/Answers/Submit.utils\";\nconst {swtichtheTimerON,swtichtheTimerFF}=switcher\n\nfunction StopWatch({currentQues,stopIT}) {\nconst [isActive, setIsActive] = useState(true);\nconst [isPaused, setIsPaused] = useState(false);\nconst [currq, setcurrq] = useState(currentQues);\n\nconst switcherstatus = useSelector((state) => state.Timerreducer.switch);\n\n\n\nconst [time, setTime] = useState(0);\nconst dispatch = useDispatch();\n\nif (stopIT==true){\n    setIsPaused(true)\n}\n\n\n\n\nReact.useEffect(() => {\n    console.log('switchit')\n    if(switcherstatus=='yes'){\n        setTime(0)\n        // dispatch(swtichtheTimerFF())\n        }\n\n     if(switcherstatus=='reset'){\n            setTime(0)\n            dispatch(swtichtheTimerFF())\n\n            // dispatch(swtichtheTimerFF())\n        }\n\t\n}, [switcherstatus]);\n\n\n\n\nconsole.log(currentQues,'bhaiya time dekhlo')\n\nconst handleStart = () => {\n\tsetIsActive(true);\n\tsetIsPaused(false);\n};\n\nReact.useEffect(() => {\n    let interval = null;\n\tif ( time<10000) {\n\tinterval = setInterval(() => {\n\t\tsetTime((time) => time + 10);\n\t}, 10);\n\t} else {\n        \n    clearInterval(interval);\n\t}\n\treturn () => {\n\tclearInterval(interval);\n\t};\n}, [isPaused]);\n\nif (time>15000)\n{\n    dispatch(swtichtheTimerON())\n    setTime(0)\n\n}\n\n\n\n\n\n\n\nconst handleReset = () => {\n\tsetIsActive(true);\n\tsetTime(0);\n};\n\nreturn (\n\t<div className=\"stop-watch\" style={{borderRadius:'25px',backgroundColor:'#cc33ff',marginLeft:'50vw',height:'40vh'}}>\n\t<Timer time={time} />\n    <Card style={{marginTop:'2vh'}}>\n    <ClockCircleTwoTone />\n    </Card>\n\t</div>\n);\n}\n\nexport default StopWatch;\n"]},"metadata":{},"sourceType":"module"}